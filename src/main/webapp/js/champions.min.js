/*!
 * froala_editor v2.7.2 (https://www.froala.com/wysiwyg-editor)
 * License https://froala.com/wysiwyg-editor/terms/
 * Copyright 2014-2017 Froala Labs
 */

!function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof module && module.exports ? module.exports = function (b, c) {
        return void 0 === c && (c = "undefined" != typeof window ? require("jquery") : require("jquery")(b)), a(c)
    } : a(window.jQuery)
}
(function (a) {
    a.extend(a.FE.POPUP_TEMPLATES, {
        champions: "[_BUTTONS_][_CHAMPIONS_]"
    }), a.extend(a.FE.DEFAULTS, {
    	emoticonsStep: 8, emoticonsSet: [{code: "Quinn", desc: "Quinn"},
            {code: "Ezreal", desc: "Ezreal"},
            {code: "Jinx", desc: "Jinx"},
            {code: "Caitlyn", desc: "Caitlyn"}],
        championsButtons: ["championsBack", "|"], championsUseImage: !0
    }),
        a.FE.PLUGINS.champions = function (b) {
            function c() {
                var a = b.$tb.find('.fr-command[data-cmd="champions"]'), c = b.popups.get("champions");
                if (c || (c = e()), !c.hasClass("fr-active")) {
                    b.popups.refresh("champions"), b.popups.setContainer("champions", b.$tb);
                    var d = a.offset().left + a.outerWidth() / 2,
                        f = a.offset().top + (b.opts.toolbarBottom ? 10 : a.outerHeight() - 10);
                    b.popups.show("champions", d, f, a.outerHeight())
                }
            }

            function d() {
                b.popups.hide("champions")
            }

            function e() {
                var a = "";
                b.opts.toolbarInline && b.opts.championsButtons.length > 0 && (a = '<div class="fr-buttons fr-champions-buttons">' + b.button.buildList(b.opts.championsButtons) + "</div>");
                var c = {
                    buttons: a, champions: g()
                }, d = b.popups.create("champions", c);
                return b.tooltip.bind(d, ".fr-emoticon"), h(d), d
            }

            function f() {
                if (!b.selection.isCollapsed()) return !1;
                var a = b.selection.element(), c = b.selection.endElement();
                if (a && b.node.hasClass(a, "fr-emoticon")) return a;
                if (c && b.node.hasClass(c, "fr-emoticon")) return c;
                var d = b.selection.ranges(0), e = d.startContainer;
                if (e.nodeType == Node.ELEMENT_NODE && e.childNodes.length > 0 && d.startOffset > 0) {
                    var f = e.childNodes[d.startOffset - 1];
                    if (b.node.hasClass(f, "fr-emoticon")) return f
                }
                return !1
            }

            function g() {
                for (var a = '<div style="text-align: center"><p style="font-size: 12px; text-align: center; padding: 0 5px;">Champions</p>', c = 0; c < b.opts.emoticonsSet.length; c++) 0 !== c && c % b.opts.emoticonsStep == 0 && (a += "<br>"), a += '<span class="fr-command fr-emoticon" tabIndex="-1" data-cmd="insertEmoticon" title="' + b.language.translate(b.opts.emoticonsSet[c].desc) + '" role="button" data-param1="' + b.opts.emoticonsSet[c].code + '">' + (b.opts.emoticonsUseImage ? '<img src="http://ddragon.leagueoflegends.com/cdn/6.24.1/img/champion/' + b.opts.emoticonsSet[c].code + '.png"/>' : "&#x" + b.opts.emoticonsSet[c].code + ";") + '<span class="fr-sr-only">' + b.language.translate(b.opts.emoticonsSet[c].desc) + "&nbsp;&nbsp;&nbsp;</span></span>";
                return b.opts.emoticonsUseImage && (a += ''), a += "</div>"
            }

            function h(c) {
                b.events.on("popup.tab", function (d) {
                    var e = a(d.currentTarget);
                    if (!b.popups.isVisible("champions") || !e.is("span, a")) return !0;
                    var f, g, h, i = d.which;
                    if (a.FE.KEYCODE.TAB == i) {
                        if (e.is("span.fr-emoticon") && d.shiftKey || e.is("a") && !d.shiftKey) {
                            var j = c.find(".fr-buttons");
                            f = !b.accessibility.focusToolbar(j, !!d.shiftKey)
                        }
                        if (!1 !== f) {
                            var k = c.find("span.fr-emoticon:focus:first, span.fr-emoticon:visible:first, a");
                            e.is("span.fr-emoticon") && (k = k.not("span.fr-emoticon:not(:focus)")), g = k.index(e), g = d.shiftKey ? ((g - 1) % k.length + k.length) % k.length : (g + 1) % k.length, h = k.get(g), b.events.disableBlur(), h.focus(), f = !1
                        }
                    } else if (a.FE.KEYCODE.ARROW_UP == i || a.FE.KEYCODE.ARROW_DOWN == i || a.FE.KEYCODE.ARROW_LEFT == i || a.FE.KEYCODE.ARROW_RIGHT == i) {
                        if (e.is("span.fr-emoticon")) {
                            var l = e.parent().find("span.fr-emoticon");
                            g = l.index(e);
                            var m = b.opts.emoticonsStep, n = Math.floor(l.length / m), o = g % m,
                                p = Math.floor(g / m), q = p * m + o, r = n * m;
                            a.FE.KEYCODE.ARROW_UP == i ? q = ((q - m) % r + r) % r : a.FE.KEYCODE.ARROW_DOWN == i ? q = (q + m) % r : a.FE.KEYCODE.ARROW_LEFT == i ? q = ((q - 1) % r + r) % r : a.FE.KEYCODE.ARROW_RIGHT == i && (q = (q + 1) % r), h = a(l.get(q)), b.events.disableBlur(), h.focus(), f = !1
                        }
                    } else a.FE.KEYCODE.ENTER == i && (e.is("a") ? e[0].click() : b.button.exec(e), f = !1);
                    return !1 === f && (d.preventDefault(), d.stopPropagation()), f
                }, !0)
            }

            function i(c, d) {
                var e = f(), g = b.selection.ranges(0);
                e ? (0 === g.startOffset && b.selection.element() === e ? a(e).before(a.FE.MARKERS + a.FE.INVISIBLE_SPACE) : g.startOffset > 0 && b.selection.element() === e && g.commonAncestorContainer.parentNode.classList.contains("fr-emoticon") && a(e).after(a.FE.INVISIBLE_SPACE + a.FE.MARKERS), b.selection.restore(), b.html.insert('<span class="fr-emoticon fr-deletable' + (d ? " fr-emoticon-img" : "") + '"' + (d ? ' style="background: url(' + d + ');"' : "") + ">" + (d ? "&nbsp;" : c) + "</span>&nbsp;" + a.FE.MARKERS, !0)) : b.html.insert('<span class="fr-emoticon fr-deletable' + (d ? " fr-emoticon-img" : "") + '"' + (d ? ' style="background: url(' + d + ');"' : "") + ">" + (d ? "&nbsp;" : c) + "</span>&nbsp;", !0)
            }

            function j() {
                b.popups.hide("champions"), b.toolbar.showInline()
            }

            function k() {
                var c = function () {
                    for (var a = b.el.querySelectorAll(".fr-emoticon:not(.fr-deletable)"), c = 0; c < a.length; c++) a[c].className += " fr-deletable"
                };
                c(), b.events.on("html.set", c), b.events.on("keydown", function (c) {
                    if (b.keys.isCharacter(c.which) && b.selection.inEditor()) {
                        var d = b.selection.ranges(0), e = f();
                        b.node.hasClass(e, "fr-emoticon-img") && e && (0 === d.startOffset && b.selection.element() === e ? a(e).before(a.FE.MARKERS + a.FE.INVISIBLE_SPACE) : a(e).after(a.FE.INVISIBLE_SPACE + a.FE.MARKERS), b.selection.restore())
                    }
                }), b.events.on("keyup", function (c) {
                    for (var d = b.el.querySelectorAll(".fr-emoticon"), e = 0; e < d.length; e++) void 0 !== d[e].textContent && 0 === d[e].textContent.replace(/\u200B/gi, "").length && a(d[e]).remove();
                    if (!(c.which >= a.FE.KEYCODE.ARROW_LEFT && c.which <= a.FE.KEYCODE.ARROW_DOWN)) {
                        var g = f();
                        b.node.hasClass(g, "fr-emoticon-img") && (a(g).append(a.FE.MARKERS), b.selection.restore())
                    }
                })
            }

            return {_init: k, insert: i, showEmoticonsPopup: c, hideEmoticonsPopup: d, back: j}
        }, a.FE.DefineIcon("champions", {NAME: "smile-o"}), a.FE.RegisterCommand("champions", {
        title: "Champions",
        undo: !1,
        focus: !0,
        refreshOnCallback: !1,
        popup: !0,
        callback: function () {
            this.popups.isVisible("champions") ? (this.$el.find(".fr-marker").length && (this.events.disableBlur(), this.selection.restore()), this.popups.hide("champions")) : this.champions.showEmoticonsPopup()
        },
        plugin: "champions"
    }), a.FE.RegisterCommand("insertChampion", {
        callback: function (a, b) {
            this.champions.insert("&#x" + b + ";", this.opts.emoticonsUseImage ? "http://ddragon.leagueoflegends.com/cdn/6.24.1/img/champion/" + b + ".png" : null), this.champions.hideEmoticonsPopup()
        }
    }), a.FE.DefineIcon("championsBack", {NAME: "arrow-left"}), a.FE.RegisterCommand("championsBack", {
        title: "Back",
        undo: !1,
        focus: !1,
        back: !0,
        refreshAfterCallback: !1,
        callback: function () {
            this.champions.back()
        }
    })
});

